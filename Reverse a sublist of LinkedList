class Solution
{
    static Node reverseList(Node head, int p, Node lastPart)
    {
        // code here
       if(head==null || head.next==null){
           return head;
       }
       
       Node next=null;
       Node curr=head;
       Node prev=null;
       while(curr!=null && p-->=0){
           next=curr.next;
           curr.next=prev;
           prev=curr;
           curr=next;
       }
       head.next=lastPart;
       return prev;
    }
    public static Node reverseBetween(Node head, int m, int n)
    {
        Node temp=head;
        Node prev=null;
        int k=m;
        int p=n-m;
        while(--k>0 ){
            prev=temp;
            temp=temp.next;
            
        }
        Node lastPart=head;
        while(n-->0){
            lastPart=lastPart.next;
        }
        if(prev!=null){
        prev.next=reverseList(temp,p,lastPart);
        }
        else
        head=reverseList(temp,p,lastPart);
        
        return head;
    }
}
